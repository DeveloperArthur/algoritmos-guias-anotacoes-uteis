- cria uma imagem docker do projeto (na maquina onde ele funciona)

	FROM openjdk:8-jdk-alpine

	# instalando ferramenta curl
	RUN apk --no-cache add curl

	# instalando maven
	ARG MAVEN_VERSION=3.6.3
	ARG USER_HOME_DIR="/root"
	ARG SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
	ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries
	RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
	  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
	  && echo "${SHA}  /tmp/apache-maven.tar.gz" | sha512sum -c - \
	  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
	  && rm -f /tmp/apache-maven.tar.gz \
	  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
	ENV MAVEN_HOME /usr/share/maven
	ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

	# instalando dependências do projeto que não estão no repositório remoto do maven (caso haja)
	RUN mkdir -p /usr/src/app/libs && mkdir -p /usr/src/app/src
	COPY *.jar /usr/src/app/libs/
	WORKDIR /usr/src/app/libs
	RUN mvn install:install-file -Dfile= -DgroupId= -DartifactId= -Dversion= -Dpackaging=jar -DgeneratePom=true
	RUN mvn install:install-file -Dfile= -DgroupId= -DartifactId= -Dversion= -Dpackaging=jar -DgeneratePom=true
	RUN mvn install:install-file -Dfile= -DgroupId= -DartifactId= -Dversion= -Dpackaging=jar -DgeneratePom=true

	WORKDIR /usr/src/app/src

- sobe um container docker da imagem do projeto
espelhando a pasta app do docker com a pasta do projeto que nao funciona:

	docker run --rm -it -v "C:\Users\Arthur\projetos\hello-world:/usr/src/app" arthur/build-hello:1.0

- executa o mvn package, pois isso gera a pasta target com todos 
os arquivos compilados e gera um arquivo .war da aplicação:

	mvn clean package -DskipTests

- sobe um container docker da imagem do tomcat, setando a porta 8080 e 
setando o arquivo .war gerado na pasta do projeto:

	docker run --rm -v "C:\Users\Arthur\projetos\hello-world\target\hello-0.0.1-SNAPSHOT.war:/usr/local/tomcat/webapps/myapp.war" -it -p 8080:8080 tomcat:8.5

resumidamente: primeiro comando será só para buildar a imagem pra gerar o .war, 
depois sobe um container tomcat setando o .war, o container vai executar o .war (aplicação)
